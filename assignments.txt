data = {
 "id ":  "0001 ",
 "type ":  "donut ",
 "name ":  "Cake ",
 "image ": {
 "url ":  "images/0001.jpg ",
 "width ": 200,
 "height ": 200
},
 "thumbnail ": {
 "url ":  "images/thumbnails/0001.jpg ",
 "width ": 32,
 "height ": 32
}
}


Write a Python program to display the below output

id               : 0001
type             :donut
name             : Cake
image.width      : 200
image.height     : 200
image.url        : images/0001.jpg
thumbnail.width  : 32
thumbnail.height : 32
thumbnail.url    : images/thumbnails/0001.jpg


######################################################################

 Define a list below

colors = [
   {
     "colors": "red",
     "values": "#f00"
   },
   {
     "colors": "green",
     "values": "#0f0"
   },
   {
     "colors": "blue",
     "values": "#00f"
   },
   {
     "colors": "cyan",
     "values": "#0ff"
   },
   {
     "colors": "magenta",
     "values": "#f0f"
   },
   {
     "colors": "yellow",
     "values": "#ff0"
   },
   {
     "colors": "black",
     "values": "#000"
    }
]


Write a Python program to display all the colors and its values.

red(#f00)
green(#0f0)
blue(#00f)
cyan(#0ff)
magenta(#f0f)
yellow(#ff0)
black(#000)


Write a Python program to display the below IP addresses

192.168.0.1
192.168.0.2
192.168.0.3
..
..
192.168.0.10


##############################################################################

Write a Python program to display the below IP addresses

192.168.0.1
192.168.0.2
192.168.0.3
..
..
192.168.0.10
192.168.1.1
192.168.1.2
192.168.1.3
..
..
192.168.1.10


##############################################################################





#########################################################################################################



Write a Python program to capture any string from the keyboard and perform the below operations.

check whether the string is upper or not
convert the string to list
display the string exactly in the center of 30 spaces width
convert the string into lower case
check whether ‘python’ is existing in the string or not



#########################################################################################################

Write a Python program to capture filename from the keyboard and display the type of the file

if the filename is ending with .py …. display "Its python file"
if the filename is ending with .pl …. display "Its perl file"
If the filename is ending with .c … display "Its C lang file"
if the filename is ending with .json … display "Its json file"

#########################################################################################################


Write a Python program to capture username and password from the keyboard and validate the password

condition1: length of the password should be greater than 5
condition2: length of the password should be less than 12
condition3: atleast one symbol ( @ or * or $ ) should exist in the password
condition4: whole password SHOULD not be in upper case


#########################################################################################################


Write a Python program for performing the below operation

define empty tuple
append "unix" to the tuple
append few more elements like ‘spark’, ‘scala’ , ‘Hadoop’, ‘sccm’ to the list
append few more elements like ‘c’,’cpp’,’java’,’salesforce’,’sap’,’unix’ to the list
remove java
remove salesforce –
add ‘oracle’ at the index 0
add ‘ mongodb’ at the index 5
reverse all the elements
display the total. no. of elements of the list
display the total count of ‘unix’ in the list

#########################################################################################################



Define dictionary as below

ytag = {
  "kind": "youtube#searchListResponse",
  "etag": "1111111m2yskBQFythfE4irbTIeOgYYfBU",
  "nextPageToken": "CAUQAA",
  "regionCode": "KE",
  "pageInfo": {
    "totalResults": 4249,
    "resultsPerPage": 5
  },
  "items": [
    {
      "kind": "youtube#searchResult",
      "etag": "2222222m2yskBQFythfE4irbTIeOgYYfBU",
      "id": {
        "kind": "youtube#channel",
        "channelId": "UCJowOS1R0FnhipXVqEnYU1A"
      }
    },
    {
      "kind": "youtube#searchResult",
      "etag": "3333333m2yskBQFythfE4irbTIeOgYYfBU",
      "id": {
        "kind": "youtube#video",
        "videoId": "Eqa2nAAhHN0"
      }
    },
    {
      "kind": "youtube#searchResult",
      "etag": "44444444m2yskBQFythfE4irbTIeOgYYfB",
      "id": {
        "kind": "youtube#video",
        "videoId": "IirngItQuVs"
      }
    }
  ]
}
Write a Python program to display all etag information from the dictionary



1111111m2yskBQFythfE4irbTIeOgYYfBU
2222222m2yskBQFythfE4irbTIeOgYYfBU
3333333m2yskBQFythfE4irbTIeOgYYfBU
44444444m2yskBQFythfE4irbTIeOgYYfB

#########################################################################################################

------------------------------------------------------------------------------------------------------------
1. Write a Python program to display all the files and directories from the current directory.
------------------------------------------------------------------------------------------------------------
2. Write a Python program to display all the files and directories from the C:\ or \usr\bin (if using Linux).
------------------------------------------------------------------------------------------------------------
3. Write a Python program to display ONLY .py that are existing in the current directory.
------------------------------------------------------------------------------------------------------------
4. Write a Python program to display ONLY .py files and its size as below from the current directory with proper formatting.

Sample output:
update_customer.py   108 bytes
customer_info.py      45 bytes
remote_server.py      49 bytes
------------------------------------------------------------------------------------------------------------

Write a Python program to display ONLY .py files and its size as below from the current directory with proper formatting.
------------------------------------------------------------------------------------------------------------

Write a Python program to display all the files and folders separately and its count also.

files
------
file1
file2
file3

Total no. of files : 504

directories
------------
dir1
dir2
dir3

Total no. of direcotires : 453



------------------------------------------------------------------------------------------------------------

Write a Python program to display the below information.

display the current user name
display current working directory
display Operating system name
display process id of your running program
display the current timestamp
display yesterday’s date
display tomorrow’s date
display all the environment variables that are existing


------------------------------------------------------------------------------------------------------------

Write a Python program to display the below information.
– disk utilization of C:\ ( total , used and free space)
– disk utilization of \tmp ( if using linux)
– display CPU utilization
– display Memory utilization

------------------------------------------------------------------------------------------------------------

Write a Python program to create 100 directories in the current directory.
------------------------------------------------------------------------------------------------------------


Write a Python program to create 100 directories in D:\ or \tmp( if using Linux)
------------------------------------------------------------------------------------------------------------

Write a Python program to create a empty file with today’s timestamp.

Eg: 22_Sep_2022.csv
------------------------------------------------------------------------------------------------------------
Write a Python program to archive all the files that are older than 100 days from the current directory.





